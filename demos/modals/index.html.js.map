{"version":3,"file":"demos/modals/index.html.js","mappings":"MAEA,SAASA,EAAUC,GACf,MAAMC,EAAWC,SAASC,eAAe,oBACnCC,EAAQF,SAASC,eAAeH,GACtCC,EAASI,MAAMC,QAAU,QACzBF,EAAMC,MAAMC,QAAU,OAC1B,CAEA,SAASC,EAAWP,GAChB,MAAMC,EAAWC,SAASC,eAAe,oBAC3BD,SAASC,eAAeH,GAChCK,MAAMC,QAAU,OACtBL,EAASI,MAAMC,QAAU,MAC7B,CAmFA,SAASE,EAAoBC,EAAOC,GAChCC,EAAwBF,GAExB,MAAMG,EAAeV,SAASW,cAAc,OAC5CD,EAAaE,UAAY,qBACzBF,EAAaG,YAAcL,EAC3BD,EAAMO,WAAWC,aAAaL,EAAcH,EAAMS,YACtD,CAEA,SAASP,EAAwBF,GAC7B,MAAMS,EAAcT,EAAMS,YACtBA,GAAyC,uBAA1BA,EAAYJ,WAC3BL,EAAMO,WAAWG,YAAYD,EAErC,CA/FAhB,SAASkB,iBAAiB,gBAAgBC,SAASC,IAC/CA,EAAOC,iBAAiB,SAAS,WAE7BxB,EADgByB,KAAKC,aAAa,cAEtC,GAAE,IAGNvB,SAASkB,iBAAiB,gBAAgBC,SAASC,IAC/CA,EAAOC,iBAAiB,SAAS,WAE7BhB,EADgBiB,KAAKC,aAAa,cAEtC,GAAE,IAGNvB,SAASqB,iBAAiB,SAAS,SAAUG,GACzC,MAAMzB,EAAWC,SAASC,eAAe,oBACnCwB,EAAcC,MAAMC,KAAK3B,SAASkB,iBAAiB,iBACnDU,EAAgBH,EAAYI,KAAKT,GAAWA,EAAOU,KAEzDL,EAAYN,SAASC,IACjB,MAAMtB,EAAUsB,EAAOG,aAAa,cAC9BrB,EAAQF,SAASC,eAAeH,GAGjCI,EAAM6B,SAASP,EAAMQ,SACrBJ,EAAcK,SAAST,EAAMQ,OAAOF,KACb,SAAxB5B,EAAMC,MAAMC,UAEZF,EAAMC,MAAMC,QAAU,OACtBL,EAASI,MAAMC,QAAU,OAC7B,GAER,IAEqB,CACjB,cACA,gBACA,aACA,iBACA,mBACA,iBAGSe,SAASW,IAClB,MAAMI,EAAalC,SAASmC,cAAe,gBAAeL,OACtDI,GACAA,EAAWb,iBAAiB,SAAS,IAAMxB,EAAUiC,IACzD,IAGkB,CAAC,cAAe,iBAAkB,iBAE1CX,SAASW,IACnB,MAAMM,EAAcpC,SAASmC,cAAe,sBAAqBL,OAC7DM,GACAA,EAAYf,iBAAiB,SAAS,IAAMhB,EAAWyB,IAC3D,IAyCJ9B,SAASC,eAAe,wBAAwBoB,iBAAiB,SApCjE,WACI,MACMgB,EADOrC,SAASC,eAAe,UACjBqC,qBAAqB,SACzC,IAAIC,GAAU,EAEd,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAAK,CACpC,MAAMjC,EAAQ8B,EAAOG,GACjBjC,EAAMmC,aAAa,aAA+B,KAAhBnC,EAAMoC,OACxCJ,GAAU,EACVjC,EAAoBC,EAAO,mBACpBA,EAAMmC,aAAa,aAAenC,EAAMqC,iBAC/CL,GAAU,EACVjC,EAAoBC,EAAO,kBAE3BE,EAAwBF,EAEhC,CACA,OAAOgC,CACX,G","sources":["webpack://de-migration/./src/pages/demos/modals/index.js"],"sourcesContent":["// Modal open & close functions\n\nfunction openModal(modalId) {\n    const modalDiv = document.getElementById('modal-containers');\n    const modal = document.getElementById(modalId);\n    modalDiv.style.display = 'block';\n    modal.style.display = 'block';\n}\n\nfunction closeModal(modalId) {\n    const modalDiv = document.getElementById('modal-containers');\n    const modal = document.getElementById(modalId);\n    modal.style.display = 'none';\n    modalDiv.style.display = 'none';\n}\n\ndocument.querySelectorAll('[data-modal]').forEach((button) => {\n    button.addEventListener('click', function () {\n        const modalId = this.getAttribute('data-modal');\n        openModal(modalId);\n    });\n});\n\ndocument.querySelectorAll('[data-modal]').forEach((button) => {\n    button.addEventListener('click', function () {\n        const modalId = this.getAttribute('data-modal');\n        closeModal(modalId);\n    });\n});\n\ndocument.addEventListener('click', function (event) {\n    const modalDiv = document.getElementById('modal-containers');\n    const openButtons = Array.from(document.querySelectorAll('[data-modal]'));\n    const openButtonIds = openButtons.map((button) => button.id);\n\n    openButtons.forEach((button) => {\n        const modalId = button.getAttribute('data-modal');\n        const modal = document.getElementById(modalId);\n\n        if (\n            !modal.contains(event.target) &&\n            !openButtonIds.includes(event.target.id) &&\n            modal.style.display !== 'none'\n        ) {\n            modal.style.display = 'none';\n            modalDiv.style.display = 'none';\n        }\n    });\n});\n\nconst openModalIds = [\n    'basic-modal',\n    'confirm-modal',\n    'form-modal',\n    'location-modal',\n    'no-service-modal',\n    'autopay-modal',\n];\n\nopenModalIds.forEach((id) => {\n    const openButton = document.querySelector(`[data-modal=\"${id}\"]`);\n    if (openButton) {\n        openButton.addEventListener('click', () => openModal(id));\n    }\n});\n\nconst closeModalIds = ['basic-modal', 'location-modal', 'autopay-modal'];\n\ncloseModalIds.forEach((id) => {\n    const closeButton = document.querySelector(`[data-modal-close=\"${id}\"]`);\n    if (closeButton) {\n        closeButton.addEventListener('click', () => closeModal(id));\n    }\n});\n\n// Form Validation\n\nfunction validateForm() {\n    const form = document.getElementById('myForm');\n    const inputs = form.getElementsByTagName('input');\n    let isValid = true;\n\n    for (let i = 0; i < inputs.length; i++) {\n        const input = inputs[i];\n        if (input.hasAttribute('required') && input.value === '') {\n            isValid = false;\n            displayErrorMessage(input, 'Field required');\n        } else if (input.hasAttribute('pattern') && !input.checkValidity()) {\n            isValid = false;\n            displayErrorMessage(input, 'Invalid input');\n        } else {\n            removeValidationMessage(input);\n        }\n    }\n    return isValid;\n}\n\nfunction displayErrorMessage(input, message) {\n    removeValidationMessage(input);\n\n    const errorMessage = document.createElement('div');\n    errorMessage.className = 'validation-message';\n    errorMessage.textContent = message;\n    input.parentNode.insertBefore(errorMessage, input.nextSibling);\n}\n\nfunction removeValidationMessage(input) {\n    const nextSibling = input.nextSibling;\n    if (nextSibling && nextSibling.className === 'validation-message') {\n        input.parentNode.removeChild(nextSibling);\n    }\n}\n\ndocument.getElementById('formValidationButton').addEventListener('click', validateForm);\n"],"names":["openModal","modalId","modalDiv","document","getElementById","modal","style","display","closeModal","displayErrorMessage","input","message","removeValidationMessage","errorMessage","createElement","className","textContent","parentNode","insertBefore","nextSibling","removeChild","querySelectorAll","forEach","button","addEventListener","this","getAttribute","event","openButtons","Array","from","openButtonIds","map","id","contains","target","includes","openButton","querySelector","closeButton","inputs","getElementsByTagName","isValid","i","length","hasAttribute","value","checkValidity"],"sourceRoot":""}